LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.all;
USE IEEE.STD_LOGIC_unsigned.all;
ENTITY traffic IS
	PORT (clk: IN STD_LOGIC;
		clr: IN STD_LOGIC;
		lights: OUT STD_LOGIC_VECTOR (5 DOWNTO 0));
END traffic;

ARCHITECTURE stateMachine OF traffic IS
TYPE state_type IS (s0, s1, s2, s3, s4, s5);
SIGNAL state: state_type;
SIGNAL count: STD_LOGIC_VECTOR (3 DOWNTO 0);
CONSTANT SEC5: STD_LOGIC_VECTOR (3 DOWNTO 0) := "1111";
CONSTANT SEC1: STD_LOGIC_VECTOR (3 DOWNTO 0) := "0011";
BEGIN
PROCESS (clk, clr)
BEGIN
	IF clr = '1' then state <= s0;
							count <= X"0";
	ELSEIF clk'event AND clk = '1' then 
	
	CASE state IS
		WHEN s0 =>
				IF count < SEC5 THEN 
					state <= s0;
					count <= count +1;
				ELSE
					state <=s1;
					count <= X"0";
				END IF;
		WHEN s1 =>
				IF count < SEC1 THEN 
					state <= s1;
					count <= count + 1;
				ELSE
					state <= s2;
					count <= X"0";
				END IF;
		WHEN s2 =>
				IF count < SEC1 THEN 
					state <= s2;
					count <= count + 1;
				ELSE
					state <= s3;
					count <= X"0";
				END IF;
		WHEN s3 =>
				IF count < SEC5 THEN 
					state <= s3;
					count <= count + 1;
				ELSE
					state <= s4;
					count <= X"0";
				END IF;
		WHEN s4 =>
				IF count < SEC1 THEN 
					state <= s4;
					count <= count + 1;
				ELSE
					state <= s5;
					count <= X"0";
				END IF;
		WHEN s5 =>
				IF count < SEC1 THEN 
					state <= s5;
					count <= count + 1;
				ELSE
					state <= s0;
					count <= X"0";
				END IF;
		WHEN OTHERS => STATE <= s0;
	END CASE;
	END IF;
END PROCESS;

C2: PROCESS(state)
BEGIN 
CASE state is
	when s0 => lights <= "001000";
	when s1 => lights <= "010000";
	when s2 => lights <= "000000";
	when s3 => lights <= "000001";
	when s4 => lights <= "000010";
	when s5 => lights <= "000000";
	when others => lights <= "000000";
END CASE;
END PROCESS;
END traffic;

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.all;
ENTITY traffic_lights_top IS
	PORT(mclk: IN STD_LOGIC;
			btn: IN STD_LOGIC_VECTOR(3 DOWNTO 2);
			ld : OUT STD_LOGIC_VECTOR(7 DOWNTO2));
END traffic_lights_top;

ARCHITECTURE traffic_lights_top OF traffic_lights_top IS 
COMPONENT clkdiv IS
	PORT(mclk : IN STD_LOGIC;
			clr : IN STD_LOGIC;
			clk3: OUT STD_LOGIC);
END COMPONENT;

COMPONENT traffic IS
	PORT(clk: IN STD_LOGIC;
			clr: IN STD_LOGIC;
			lights: OUT STD_LOGIC_VECTOR(5 DOWNTO 0));
	END COMPONENT;
SIGNAL clr, clk3: STD_LOGIC;
BEGIN
	clr <= btn(3);
	U1: clkdiv
			PORT MAP (mclk => mclk,
						clr => clr,
						clk3 => clk3);
	U2: traffic
			PORT MAP (clk => clk3,
						clr => clr,
						lights => ld);
END traffic_lights_top;